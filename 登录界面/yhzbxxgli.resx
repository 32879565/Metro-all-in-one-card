<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAXgBeAAD/2wBDABQODxIPDRQSEBIXFRQYHjIhHhwcHj0sLiQySUBMS0dARkVQ
        WnNiUFVtVkVGZIhlbXd7gYKBTmCNl4x9lnN+gXz/2wBDARUXFx4aHjshITt8U0ZTfHx8fHx8fHx8fHx8
        fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHz/wAARCAJYAyADASIAAhEBAxEB/8QA
        GQABAQEBAQEAAAAAAAAAAAAAAAECAwQG/8QAJBABAAICAgIDAAMBAQAAAAAAAAERAiESMVGBQWFxAxMi
        kVL/xAAWAQEBAQAAAAAAAAAAAAAAAAAAAQL/xAAWEQEBAQAAAAAAAAAAAAAAAAAAEQH/2gAMAwEAAhED
        EQA/APrgFQABQAQAAAAAAAAABQAAAAAAAAAAAAAAAAAAFAAAAUAQAAAAAAAAAAAAAAAAAAAAAAAFQAAA
        QAAAAAAAAAAAAAAAAAARQEAAAAAAAAAUUBEQsBQAAAAAAAAAFAAAAAAAAAAAFAAChQSilBEopQEopQEo
        pQEopQABFAAAAAAAAAAAAAAAAAAAAAFQAARQBKUBABQAQAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAA
        AUAAAAAAAAAAAAAUVFEAAAAAAAAAEUAAAAAAAABAUAAAEUAAAAAAAAAAAAAAAAAAAAFQAAAAAAAAAAAB
        ABQAQAAAFABAAEFAQUAQAAUAAAAAAAAAAAAAAAAAAUVFAAEABQAABAAAAAAARQAAAAEUAAAQUAAARQEU
        AAAAAAAAAAAAAAAAAAAAAAAAAAFAAAABFAQKAAAABAAAAAAEABQAAAAAAAAUEFAQVBQAAFEQUAAAAFAE
        AAAAARQAABFAAAAAAAAARQAAAAEUAAAAQFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARQEFFEFAQVAAAABE
        BQAAAAAAAAUBFAFQRQEFAAAAAABQBAAAAAAAAARQEUAEUBFAAAAAAAAAAAAAAAAAAAAAAAEUAEUAAAAA
        EAURQAAAAAAAAAAAAAAAAAFBAEABQAEUBAAAAAAAAC1QFLVAFAEAAAAABQBAAAAAAAAAAAAAAAAAAAAA
        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
        CKAAAAAAACAoigIAJOVJctM7BBUQEURUAAAAAABewWJ8qkQqoAKAAAnpQAAAAZRRlUUAAAAFQAAAABQQ
        ABUAFQUUEFVUBFQtQEUAAAAEABSwAQUBBQBUAVPYAKgAAAAAew0AB7AQUEKhdICgAqoAogAACiAKgAAA
        AAIoCFAglfcHH7VFDiUCKlCgiUUpoEUpQFBQBAAAUQBRAFEAZAQAFBUAAAAAAEAAAAAsFAABUAUAAAU9
        gDIAKom1AEWgBAFEX/oCoAAoIACggAbALAA2bAAABABRAFEUFEUAAARQAABAFAAQABQEFAQUBDQAlQKA
        goAAAAAAAAAAAAAADIAAAAAAAAAAAAABrwAAqAoAAAqooIigAAAAAAAAAHoAUAQAFABAAFQBUUBBQEoU
        BKFQE9m/KgHtKVQZpQAAAAAAAAAABQAQAFAAAAEAAAAAVAAAAAAAAAAAAAAABkAAAAAAAAAAAAAALAAA
        FAAAAAFEAUAAAAsAAAAAAAAAUQBRAFQAFQABQRUAAAAAAAFQBQAAAAAAAAAAAAQFQAUQAAAAAAAFQAAA
        AAAAPgAAAPgAAAZAAKACgAAAAAAACwQAAAFBUUAAEFBRRBlQBQQBQAAAAAAAAAAAUQBUAAAAAAAAAFQA
        AAAAUQBRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQAAAAAAAAAAAAEABQFQAVABQAAARQLLAFA
        BFAAAAAARQAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUAAAAAAAAAAAAAAAAAAQBRAEAAAAA
        AAAAAAAAAABUAFEUAAAABUAUAARQAAEUAEtQAABAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAUQBRAFEAVAAAAABAAAAAAAAAAAAAAAAAAAAFQAVAFQUAAFEAUQBRAAAFQUEUAAARQAAARQA
        AARQAAAAAQFAAAAAAAAAABAURQBAFAAEUAAAAAAAQBRAAAARQAAAQFEAURQQAAAAAAAAAAAAAAAAAAAA
        AAAFAAAAABBQEUAAAUEBRFAAAEUEFAAQFQAUQAABFABRAUQAVAAAFEAUQBRAAAAAFEARQARQAAAAAAAA
        AAARQEVAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAAABRAFEAURQEVAUEAVAFAAAAAAAAAAAAAAAAAABAUE
        BQAAAAAQUARQAQBQAAQFEAUQBRAFQAKKACigAooAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        UQBUABUssFEssFEsAVFAEAUQBRAFEAUQBUAFEAVABRAFQUEFQAAAAAAAAAAAAAAAAAABUAAAVAAAAAAA
        AAAAAAAAAAAAsACwAssAAACwAssAAALLACywAsAAAAAARQAAQQAAAAFQBRBRQLUABAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAFQVEAAAAAAAAA
        AAABUVcABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEABQAAAAAAAAAAA
        AAAAAAAAAAAAABGQAFAAAAAAAAAAFBQAEAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU
        AAAAAEAAAEABQAAAAAAAAAAAAoAAsALLAAIAAALLAAAEFRlQAAAAAAFBFBQAUABAAAAAAAAAAAAAsALL
        ACywAAAAAAAAAAAAAAAAAAAAAAAAQAAAQqqIpQAAAEAAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAABFAEA
        BUAAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFEBAAAAAAAUAAFR//Z
</value>
  </data>
</root>